{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport api from \"../plugins/api\";\nvar ImageService = function () {\n  function ImageService() {\n    _classCallCheck(this, ImageService);\n  }\n  _createClass(ImageService, [{\n    key: \"uploadImage\",\n    value: function () {\n      var _uploadImage = _asyncToGenerator(function* (selectedImage) {\n        var uri = Platform.OS === 'android' ? selectedImage.uri : selectedImage.uri.replace('file://', '');\n        var filename = selectedImage.uri.split('/').pop();\n        var match = /\\.(\\w+)$/.exec(filename);\n        var ext = match == null ? void 0 : match[1];\n        var type = match ? `image/${match[1]}` : `image`;\n        var formData = new FormData();\n        formData.append('file', {\n          uri: uri,\n          name: `image.${ext}`,\n          type: type\n        });\n        try {\n          var _yield$api$post = yield api.post('media/images/', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }),\n            data = _yield$api$post.data;\n          return data;\n        } catch (err) {\n          console.log(err);\n          return null;\n        }\n      });\n      function uploadImage(_x) {\n        return _uploadImage.apply(this, arguments);\n      }\n      return uploadImage;\n    }()\n  }]);\n  return ImageService;\n}();\nexport default new ImageService();","map":{"version":3,"names":["api","ImageService","_classCallCheck","_createClass","key","value","_uploadImage","_asyncToGenerator","selectedImage","uri","Platform","OS","replace","filename","split","pop","match","exec","ext","type","formData","FormData","append","name","_yield$api$post","post","headers","data","err","console","log","uploadImage","_x","apply","arguments"],"sources":["C:/Users/jucel/Documents/Biblioteca-Publica-do-Paran-/src/services/images.js"],"sourcesContent":["import api from '../plugins/api'\r\n\r\nclass ImageService {\r\n  async uploadImage(selectedImage) {\r\n    const uri =\r\n      Platform.OS === 'android'\r\n        ? selectedImage.uri\r\n        : selectedImage.uri.replace('file://', '');\r\n    const filename = selectedImage.uri.split('/').pop();\r\n    const match = /\\.(\\w+)$/.exec(filename);\r\n    const ext = match?.[1];\r\n    const type = match ? `image/${match[1]}` : `image`;\r\n    const formData = new FormData();\r\n    formData.append('file', {\r\n      uri,\r\n      name: `image.${ext}`,\r\n      type,\r\n    });\r\n    try {\r\n      const { data } = await api.post('media/images/', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ImageService();"],"mappings":";;;AAAA,OAAOA,GAAG;AAAsB,IAE1BC,YAAY;EAAA,SAAAA,aAAA;IAAAC,eAAA,OAAAD,YAAA;EAAA;EAAAE,YAAA,CAAAF,YAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,YAAA,GAAAC,iBAAA,CAChB,WAAkBC,aAAa,EAAE;QAC/B,IAAMC,GAAG,GACPC,QAAQ,CAACC,EAAE,KAAK,SAAS,GACrBH,aAAa,CAACC,GAAG,GACjBD,aAAa,CAACC,GAAG,CAACG,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;QAC9C,IAAMC,QAAQ,GAAGL,aAAa,CAACC,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;QACnD,IAAMC,KAAK,GAAG,UAAU,CAACC,IAAI,CAACJ,QAAQ,CAAC;QACvC,IAAMK,GAAG,GAAGF,KAAK,oBAALA,KAAK,CAAG,CAAC,CAAC;QACtB,IAAMG,IAAI,GAAGH,KAAK,GAAI,SAAQA,KAAK,CAAC,CAAC,CAAE,EAAC,GAAI,OAAM;QAClD,IAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE;UACtBb,GAAG,EAAHA,GAAG;UACHc,IAAI,EAAG,SAAQL,GAAI,EAAC;UACpBC,IAAI,EAAJA;QACF,CAAC,CAAC;QACF,IAAI;UACF,IAAAK,eAAA,SAAuBxB,GAAG,CAACyB,IAAI,CAAC,eAAe,EAAEL,QAAQ,EAAE;cACzDM,OAAO,EAAE;gBAAE,cAAc,EAAE;cAAsB;YACnD,CAAC,CAAC;YAFMC,IAAI,GAAAH,eAAA,CAAJG,IAAI;UAGZ,OAAOA,IAAI;QACb,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAChB,OAAO,IAAI;QACb;MACF,CAAC;MAAA,SAAAG,YAAAC,EAAA;QAAA,OAAA1B,YAAA,CAAA2B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,WAAA;IAAA;EAAA;EAAA,OAAA9B,YAAA;AAAA;AAGH,eAAe,IAAIA,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}