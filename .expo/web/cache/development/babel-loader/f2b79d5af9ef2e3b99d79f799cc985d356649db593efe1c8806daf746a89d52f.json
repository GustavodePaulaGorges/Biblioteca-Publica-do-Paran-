{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState, useCallback } from 'react';\nimport { Card, Text, FAB } from 'react-native-paper';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TituloService from \"../../services/titulos\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MovieList(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    titulos = _useState4[0],\n    setTitulos = _useState4[1];\n  var fetchTitulos = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var data = yield TituloService.getAllTitulos();\n      setTitulos(data);\n    });\n    return function fetchTitulos() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onRefresh = useCallback(_asyncToGenerator(function* () {\n    setRefreshing(true);\n    yield fetchTitulos();\n    setRefreshing(false);\n  }), []);\n  useEffect(function () {\n    fetchTitulos();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: titulos.map(function (titulo) {\n        return _jsxs(Card, {\n          style: styles.card,\n          children: [_jsxs(Card.Content, {\n            children: [_jsx(Text, {\n              variant: \"titleLarge\",\n              children: \"a\"\n            }), _jsx(Text, {\n              variant: \"bodyMedium\",\n              children: \"a\"\n            })]\n          }), _jsx(Card.Cover, {\n            style: styles.cover,\n            source: {\n              uri: titulo.capa.url\n            }\n          })]\n        }, titulo.id);\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  card: {\n    margin: 10\n  },\n  cover: {\n    height: 400\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"names":["useEffect","useState","useCallback","Card","Text","FAB","RefreshControl","StyleSheet","ScrollView","View","TituloService","jsx","_jsx","jsxs","_jsxs","MovieList","_ref","navigation","_useState","_useState2","_slicedToArray","refreshing","setRefreshing","_useState3","_useState4","titulos","setTitulos","fetchTitulos","_ref2","_asyncToGenerator","data","getAllTitulos","apply","arguments","onRefresh","style","styles","container","children","refreshControl","map","titulo","card","Content","variant","Cover","cover","source","uri","capa","url","id","create","flex","backgroundColor","margin","height","fab","position","right","bottom"],"sources":["C:/Users/jucel/Documents/Biblioteca-Publica-do-Paran-/src/Pages/teste/index.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\r\nimport { Card, Text, FAB } from 'react-native-paper';\r\nimport { RefreshControl, StyleSheet, ScrollView, View } from 'react-native';\r\nimport TituloService from '../../services/titulos';\r\n\r\n\r\nexport default function MovieList({ navigation }) {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [titulos, setTitulos] = useState([]);\r\n\r\n\r\n  const fetchTitulos = async () => {\r\n    const data = await TituloService.getAllTitulos();\r\n    setTitulos(data);\r\n  };\r\n\r\n  const onRefresh = useCallback(async () => {\r\n    setRefreshing(true);\r\n    await fetchTitulos();\r\n    setRefreshing(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchTitulos();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      >\r\n        {titulos.map((titulo) => (\r\n          <Card style={styles.card} key={titulo.id}>\r\n            <Card.Content>\r\n              <Text variant=\"titleLarge\">a</Text>\r\n              <Text variant=\"bodyMedium\">\r\n                a\r\n              </Text>\r\n            </Card.Content>\r\n            <Card.Cover\r\n              style={styles.cover}\r\n              source={{ uri: titulo.capa.url }}\r\n            />\r\n          </Card>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  card: {\r\n    margin: 10,\r\n  },\r\n  cover: {\r\n    height: 400,\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}